
import { SettingsTranslations } from '../types/settings';

export const settingsTranslations: SettingsTranslations = {
	// General Settings - Tabs
  systemSettings: "System Settings",
  mailSettings: "Mail Settings",
  
	// General Settings - System Settings
  appName: "Application Name",
  appURL: "Application URL",
  senderName: "Sender Name",
  senderEmail: "Sender Email Address",
  hideControls: "Hide Controls",
  
	// General Settings - Mail Settings
  smtpSettings: "SMTP Configuration",
  smtpEnabled: "Enable SMTP",
  smtpHost: "SMTP Host",
  smtpPort: "SMTP Port",
  smtpUsername: "SMTP Username",
  smtpPassword: "SMTP Password",
  smtpAuthMethod: "Authentication Method",
  enableTLS: "Enable TLS",
  localName: "Local Name",
  
	// General Settings - Test Email
  testEmail: "Test Email",
  sendTestEmail: "Send test email",
  emailTemplate: "Email template",
  verification: "Verification",
  passwordReset: "Password reset",
  confirmEmailChange: "Confirm email change",
  otp: "OTP",
  loginAlert: "Login alert",
  authCollection: "Auth collection",
  selectCollection: "Select collection",
  toEmailAddress: "To email address",
  enterEmailAddress: "Enter email address",
	send: "Send",
  sending: "Sending...",
	testEmailSettings: "Test Email Settings",
	testEmailDescription: "Test whether the current Email Settings are available",
	testEmailAlert: "This will send a test email using your configured SMTP settings. Make sure SMTP is properly configured first.",

  // General Settings - Actions and status
  save: "Save Changes",
  saving: "Saving...",
  settingsUpdated: "Settings updated successfully",
  errorSavingSettings: "Error saving settings",
  errorFetchingSettings: "Error loading settings",
  testConnection: "Test Connection",
  testingConnection: "Testing Connection...",
  connectionSuccess: "Connection successful",
  connectionFailed: "Connection failed",

	// User Management
	addUser: "Add User",
	permissionNotice: "Permission Notice:",
	permissionNoticeAddUser: "As an admin user, you do not have access to view or modify system and mail settings. These settings can only be accessed and modified by Super Admins. Contact your Super Admin if you need to make changes to system configuration or mail settings.",
	loadingSettings: "Loading settings...",
	loadingSettingsError: "Error loading settings",

  //NotificationSettings.ts
  titleNotification: "Notification Settings",
  descriptionChannelsServices: "Configure notification channels for your services",
  addChannel: "Add Channel",
  all: "All Channels",
  telegram: "Telegram",
  discord: "Discord",
  slack: "Slack",
  signal: "Signal",
  googleChat: "Google Chat",
  email: "Email",
  webhook: "Webhook",

  // NotificationChannelDialog.tsx
  editChannel: "Edit Notification Channel",
  addChannelDialog: "Add Notification Channel",
  channelName: "Channel Name",
  channelNameDesc: "A name to identify this notification channel",
  channelType: "Channel Type",
  selectType: "Select notification type",
  enabled: "Enabled",
  enabledDesc: "Enable or disable this notification channel",
  cancel: "Cancel",
  updateChannel: "Update Channel",
  createChannel: "Create Channel",
  payloadTemplates: "Payload Templates",
  availablePlaceholders: "Available Placeholders:",
  server: "Server",
  service: "Service",
  ssl: "SSL",
  common: "Common",
  webhookUrl: "Webhook URL",
  webhookUrlDesc: "The URL where webhook notifications will be sent",
  payloadTemplate: "Payload Template (Optional)",
  payloadTemplateDesc: "JSON template for the webhook payload. Leave empty to use default template.",
  telegramChatId: "Chat ID",
  telegramChatIdDesc: "The Telegram chat ID to send notifications to",
  botToken: "Bot Token",
  botTokenDesc: "Your Telegram bot token from @BotFather",
  discordWebhookUrl: "Webhook URL",
  discordWebhookUrlDesc: "Discord webhook URL from your server settings",
  slackWebhookUrl: "Webhook URL",
  slackWebhookUrlDesc: "Slack incoming webhook URL",
  signalNumber: "Signal Number",
  signalNumberDesc: "Signal phone number to send notifications to",
  signalApiEndpoint: "Signal API Endpoint",
  signalApiEndpointDesc: "The Rest API endpoint for your Signal service",
  googleChatWebhookUrl: "Google Chat Webhook URL",
  googleChatWebhookUrlDesc: "Google Chat webhook URL from your Google Chat space",
  emailAddress: "Email Address",
  emailAddressDesc: "Email address to send notifications to",
  emailSenderName: "Sender Name",
  emailSenderNameDesc: "Display name for outgoing emails",
  smtpServer: "SMTP Server",
  // smtpPort: "SMTP Port",
  // smtpPassword: "SMTP Password",
  smtpPasswordDesc: "Password for authenticating with the SMTP server",
  ntfyEndpoint: "NTFY Endpoint",
  ntfyEndpointDesc: "The NTFY endpoint URL including your topic (e.g., https://ntfy.sh/checkcle)",
  apiToken: "API Token",
  apiTokenOptional: "API Token (Optional)",
  apiTokenDesc: "Optional API token for authentication with NTFY server",
  pushoverUserKey: "User Key",
  pushoverUserKeyDesc: "Your Pushover user key (or group key)",
  notifiarrChannelId: "Channel ID",
  notifiarrChannelIdDesc: "The Discord channel ID where notifications will be sent",
  gotifyServerUrl: "Server URL",
  gotifyServerUrlDesc: "The URL of your Gotify server",
  errorSaveChannel: "Failed to save notification channel",

  channelNamePlaceholder: "My Notification Channel",
  telegramChatIdPlaceholder: "Telegram Chat ID",
  botTokenPlaceholder: "Telegram Bot Token",
  discordWebhookUrlPlaceholder: "https://discord.com/api/webhooks/...",
  slackWebhookUrlPlaceholder: "https://hooks.slack.com/services/...",
  signalNumberPlaceholder: "+1234567890",
  signalApiEndpointPlaceholder: "https://your-signal-api.com/v2/send",
  googleChatWebhookUrlPlaceholder: "https://chat.googleapis.com/v1/spaces/...",
  emailAddressPlaceholder: "notifications@example.com",
  emailSenderNamePlaceholder: "Alert System",
  smtpServerPlaceholder: "smtp.gmail.com",
  smtpPortPlaceholder: "587",
  smtpPasswordPlaceholder: "Enter your SMTP password",
  ntfyEndpointPlaceholder: "https://ntfy.sh/your-topic",
  apiTokenPlaceholder: "Enter API token",
  pushoverUserKeyPlaceholder: "Your Pushover user key",
  notifiarrChannelIdPlaceholder: "Discord Channel ID",
  gotifyServerUrlPlaceholder: "https://your-gotify-server.com",
  webhookUrlPlaceholder: "https://api.example.com/webhook",

  // DataRetentionSettings.tsx
  // permissionNotice: "Permission Notice:",
  permissionNoticeDataRetention: "As an admin user, you do not have access to data retention settings. These settings can only be accessed and modified by Super Admins.",
  loadingRetentionSettings: "Loading retention settings...",
  dataRetention: "Data Retention Settings",
  dataRetentionDescription: "Configure how long monitoring data is kept in the system",
  uptimeRetentionLabel: "Uptime Monitoring Retention (days)",
  uptimeRetentionHelp: "Service uptime and incident data older than this will be automatically deleted",
  serverRetentionLabel: "Server Monitoring Retention (days)",
  serverRetentionHelp: "Server metrics and process data older than this will be automatically deleted",
  lastCleanup: "Last automatic cleanup",
  // save: "Save Changes"

};