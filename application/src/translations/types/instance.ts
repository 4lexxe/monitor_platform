
export interface InstanceTranslations {

  // InstanceMonitoring.tsx
  instanceMonitoring: string;
  describeMonitorInstance: string;
  addServerAgent: string;
  errorLoadingServers: string;
  unableToFetchServerData: string;
  retry: string;

  // ServerTable.tsx
  servers: string;
  loadingServers: string;
  searchServersPlaceholder: string;
  noServersFound: string;
  name: string;
  status: string;
  OS: string;
  IPAddress: string;
  CPU: string;
  memory: string;
  disk: string;
  uptime: string;
  lastChecked: string;
  actions: string;
  viewServerDetail: string;
  containerMonitoring: string;
  resumeMonitoring: string;
  pauseMonitoring: string;
  editServer: string;
  deleteServer: string;
  deleteServerConfirmTitle: string;
  deleteServerConfirmDesc: string;
  cancel: string;
  deleting: string;
  delete: string;
  serverDeleted: string;
  serverDeletedDesc: string;
  error: string;
  deleteServerError: string;
  serverPaused: string;
  serverResumed: string;
  monitoringPaused: string;
  monitoringResumed: string;
  pauseServerError: string;
  resumeServerError: string;

  // ServerStatsCards.tsx
  totalServers: string;
  onlineServers: string; 
  offlineServers: string;
  warningServers: string;

  // AddServerAgentDialog.tsx
  addServerMonitoringAgent: string;
  configureAgentDesc: string;
  configureAgent: string;
  oneClickInstall: string;
  dockerOneClick: string;
  manualInstallation: string;
  validationError: string;
  fillRequiredFields: string;
  serverAgentCreated: string;
  serverAgentCreatedDesc: string;
  failedToCreateAgent: string;

  // ServerAgentConfigForm.tsx
  serverName: string;
  serverNamePlaceholder: string;
  serverNameDesc: string;
  serverAgentId: string;
  serverAgentIdDesc: string;
  operatingSystem: string;
  checkInterval: string;
  selectInterval: string;
  interval30s: string;
  interval1m: string;
  interval2m: string;
  interval5m: string;
  checkIntervalDesc: string;
  retryAttempts: string;
  selectRetryAttempts: string;
  attempt1: string;
  attempt2: string;
  attempt3: string;
  attempt5: string;
  retryAttemptsDesc: string;
  serverToken: string;
  serverTokenDesc: string;
  systemUrl: string;
  systemUrlDesc: string;
  creatingAgent: string;
  createServerAgent: string;

  // EditServerDialog.tsx
  editServerConfiguration: string;
  serverNameLabel: string;
  enterServerNamePlaceholder: string;
  checkIntervalLabel: string;
  // selectInterval: string;
  interval10m: string;
  maxRetriesLabel: string;
  selectMaxRetries: string;
  retry1: string;
  retry2: string;
  retry3: string;
  retry5: string;
  retry10: string;
  dockerMonitoring: string;
  enabled: string;
  disabled: string;
  enableNotifications: string;
  notificationSettings: string;
  notificationChannels: string;
  loadingChannels: string;
  noChannelsAvailable: string;
  selectedChannels: string;
  serverSetThreshold: string;
  loadingThresholds: string;
  selectServerThreshold: string;
  noThreshold: string;
  thresholdDetails: string;
  cpuThresholdPct: string;
  ramThresholdPct: string;
  diskThresholdPct: string;
  networkThresholdPct: string;
  serverTemplate: string;
  loadingTemplates: string;
  selectServerTemplate: string;
  noTemplate: string;
  templateDetails: string;
  ramMessage: string;
  cpuMessage: string;
  diskMessage: string;
  networkMessage: string;
  upMessage: string;
  downMessage: string;
  noMessageDefined: string;
  serverUpdated: string;
  serverUpdatedDesc: string;
  updating: string;
  updateServer: string;
  failedToLoadChannels: string;
  failedToLoadTemplates: string;
  failedToLoadThresholds: string;
  warning: string;
  serverUpdatedButThresholdFailed: string;
  failedToUpdateServer: string;

  // ServerHistoryCharts.tsx
  historicalPerformance: string;
  loading: string;
  errorLoadingChartData: string;
  noHistoricalData: string;
  rawMetricsCount: string;
  serverIdTimeRange: string;
  dataExistsOutsideRange: string;
  noMetricsDataFound: string;
  dataPointsTimeRange: string;

}
