
export interface RegionTranslations {
  
  // RegionalMonitoringContent.tsx
  regionalmonitoring: string;
  descriptRegionPage: string;
  addRegionalAgent: string;
  totalAgents: string;
  regionalMonitoringAgents: string;
  onlineAgents: string;
  currentlyConnected: string;
  offlineAgents: string;
  disconnectedAgents: string;
  regionalAgents: string;
  noRegionalAgents: string;
  getStartedAddAgent: string;
  addFirstAgent: string;
  agentRemoved: string;
  agentRemovedDesc: string;
  regionalAgentAdded: string;
  regionalAgentAddedDesc: string;
  error: string;
  failedToRemoveAgent: string;

  // AddRegionalAgentDialog.tsx
  addRegionalMonitoringAgent: string;
  deployRegionalMonitoringAgent: string;
  regionName: string;
  regionNamePlaceholder: string;
  agentServerIpAddress: string;
  agentIpPlaceholder: string;
  cancel: string;
  generateInstallation: string;
  generating: string;
  agentConfigurationReady: string;
  oneClickInstallScriptGenerated: string;
  oneClickInstallTab: string;
  agentDetailsTab: string;
  manualInstallTab: string;
  oneClickAutomaticInstallation: string;
  completeInstallationDescription: string;
  whatThisScriptDoes: string;
  scriptActionDownload: string;
  scriptActionInstall: string;
  scriptActionConfigure: string;
  scriptActionStart: string;
  scriptActionHealthChecks: string;
  runCommandOnServer: string;
  downloadCompleteScript: string;
  copyFullScript: string;
  localDevelopmentNotice: string;
  generatedAgentConfiguration: string;
  autoConfiguredDuringInstallation: string;
  agentId: string;
  regionNameDetail: string;
  serverIp: string;
  apiEndpoint: string;
  authenticationToken: string;
  configurationFileLocation: string;
  manualInstallationSteps: string;
  stepByStepManualInstallation: string;
  step1DownloadPackage: string;
  downloadAmd64Notice: string;
  downloadArm64Notice: string;
  step2InstallPackage: string;
  step3ConfigureAgent: string;
  copySampleConfiguration: string;
  addConfigurationValues: string;
  step4StartService: string;
  step5VerifyInstallation: string;
  addAnotherAgent: string;
  completeSetup: string;
  copied: string;
  copiedDescription: string;
  copyFailed: string;
  copyFailedDescription: string;
  copyFailedLocalhost: string;
  copyFailedChrome: string;
  downloaded: string;
  downloadedDescription: string;
  failedToCreateAgent: string;

  // RegionalAgentCard.tsx
  defaultBadge: string;
  copyAgentId: string;
  removeAgent: string;
  online: string;
  offline: string;
  lastUpdated: string;
  activeMonitoring: string;
  connectionLost: string;
}
